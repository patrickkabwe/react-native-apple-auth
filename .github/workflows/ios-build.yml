name: Build iOS

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build-ios.yml"
      - "example/ios/**"
      - "**/nitrogen/generated/shared/**"
      - "**/nitrogen/generated/ios/**"
      - "packages/react-native-apple-auth/cpp/**"
      - "packages/react-native-apple-auth/ios/**"
      - "**/Podfile.lock"
      - "**/*.podspec"
      - "**/react-native.config.js"
      - "**/nitro.json"
  pull_request:
    paths:
      - ".github/workflows/build-ios.yml"
      - "example/ios/**"
      - "**/nitrogen/generated/shared/**"
      - "**/nitrogen/generated/ios/**"
      - "packages/react-native-apple-auth/cpp/**"
      - "packages/react-native-apple-auth/ios/**"
      - "**/Podfile.lock"
      - "**/*.podspec"
      - "**/react-native.config.js"
      - "**/nitro.json"

env:
  USE_CCACHE: 1

jobs:
  build_ios:
    name: Build iOS Example App
    runs-on: macOS-latest
    strategy:
      matrix:
        arch: ["1", "0"]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Install npm dependencies (bun)
        run: bun install

      - name: Restore ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true
          working-directory: example/ios

      - name: Install xcpretty
        run: gem install xcpretty

      - name: Restore Pods cache
        uses: actions/cache@v4
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock', '**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        working-directory: example/ios
        run: RCT_NEW_ARCH_ENABLED=${{ matrix.arch }} pod install

      - name: Clear DerivedData
        run: rm -rf ~/Library/Developer/Xcode/DerivedData/*
        continue-on-error: true

      - name: Build App (${{ matrix.arch == '1' && 'New' || 'Old' }} Architecture)
        working-directory: example/ios
        run: "set -o pipefail && xcodebuild \
          CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++ \
          -derivedDataPath build -UseModernBuildSystem=YES \
          -workspace AppleAuthExample.xcworkspace \
          -scheme AppleAuthExample \
          -sdk iphonesimulator \
          -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          build \
          CODE_SIGNING_ALLOWED=NO | xcpretty"
